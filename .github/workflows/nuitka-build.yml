name: Build Nuitka Distributables

on:
  workflow_dispatch:
    inputs:
      target_os:
        description: "Platform to build"
        required: true
        type: choice
        default: macos
        options:
          - macos
          - windows

env:
  PYTHON_VERSION: '3.11'

jobs:
  build-macos:
    if: ${{ github.event.inputs.target_os == 'macos' }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
      - name: Install dependencies
        run: |
          pip install -r requirements-gui.txt
          pip install nuitka
      - name: Build with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: gui/main.py
          mode: app
          output-dir: build
          lto: "yes"
          include-package: esl_psc_cli
          no-deployment-flag: self-execution
          enable-plugins: |
            pyside6
            matplotlib
          nofollow-import-to: "*.tests"
          macos-app-icon: assets/icons/app.icns
      - name: Build CLI helper with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: esl_psc_cli/esl_multimatrix.py
          mode: onefile
          output-dir: build/cli
          lto: "yes"
          include-package: esl_psc_cli
          enable-plugins: |
            matplotlib
          python-flag: "-u"
      - name: Rename .app bundle
        run: mv build/main.app build/ESL-PSC.app
      - name: Embed CLI binary into bundle
        run: |
          cp build/cli/esl_multimatrix.bin build/ESL-PSC.app/Contents/MacOS/esl_multimatrix
          chmod +x build/ESL-PSC.app/Contents/MacOS/esl_multimatrix
      - name: Add CLI helpers
        run: |
          mkdir -p build/ESL-PSC.app/Contents/MacOS/bin
          cp bin/preprocess_mac build/ESL-PSC.app/Contents/MacOS/bin/preprocess_mac
          cp bin/sg_lasso_mac build/ESL-PSC.app/Contents/MacOS/bin/sg_lasso_mac
          chmod +x build/ESL-PSC.app/Contents/MacOS/bin/*
      - name: Create DMG
        run: |
          hdiutil create -volname "ESL-PSC" \
                         -srcfolder build/ESL-PSC.app \
                         -ov -format UDZO build/ESL-PSC.dmg
      - uses: actions/upload-artifact@v4
        with:
          name: ESL-PSC-macOS
          path: build/ESL-PSC.dmg

  build-windows:
    if: ${{ github.event.inputs.target_os == 'windows' }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
      - name: Install dependencies
        run: |
          pip install -r requirements-gui.txt
          pip install nuitka
      - name: Build with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: gui/main.py
          mode: app
          output-dir: build
          lto: "yes"
          include-package: esl_psc_cli
          no-deployment-flag: self-execution
          enable-plugins: |
            pyside6
            matplotlib
            upx
          nofollow-import-to: "*.tests"
          windows-icon-from-ico: assets/icons/app.ico
      - name: Build CLI helper with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: esl_psc_cli/esl_multimatrix.py
          mode: onefile
          output-dir: build/cli
          lto: "yes"
          include-package: esl_psc_cli
          enable-plugins: |
            matplotlib
          python-flag: "-u"
      - name: Rename executable
        run: move build\\main.exe build\\ESL-PSC.exe
        shell: pwsh
      - name: Install Qt tools
        run: choco install -y qt6-default
        shell: pwsh
      - name: Bundle Qt frameworks
        shell: pwsh
        run: |
          $wqt = & where windeployqt.exe
          & $wqt build\ESL-PSC.exe --verbose 1 --release --compiler-runtime
      - name: Add CLI binaries
        shell: bash
        run: |
          cp build/cli/esl_multimatrix.exe build/esl_multimatrix.exe
          mkdir -p build/bin
          cp bin/preprocess.exe build/bin/preprocess.exe
          cp bin/sg_lasso.exe build/bin/sg_lasso.exe
      - name: Compress build to ZIP
        shell: pwsh
        run: Compress-Archive -Path build\* -DestinationPath ESL-PSC-Windows.zip
      - uses: actions/upload-artifact@v4
        with:
          name: ESL-PSC-Windows
          path: ESL-PSC-Windows.zip
